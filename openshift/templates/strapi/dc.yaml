kind: Template
apiVersion: v1
objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        openshift.io/host.generated: "true"
      labels:
        app: ${NAME}-${SUFFIX}
        pr: ${PULL_REQUEST_NUMBER}
        version: ${IMAGE_TAG}
        group: ${NAME}
      name: ${NAME}-${SUFFIX}
    spec:
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      port:
        targetPort: 1337-1337
      to:
        kind: Service
        name: ${NAME}-${SUFFIX}
        weight: 100
      wildcardPolicy: None
    status: {}

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: strapi-media-pvc
      labels:
        app: strapi
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: "2Gi"
    status: {}

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
        version: ${IMAGE_TAG}
        pr: ${PULL_REQUEST_NUMBER}
        group: ${NAME}
      name: ${NAME}-${SUFFIX}
    spec:
      ports:
      - name: 1337-1337
        port: 1337
        protocol: TCP
        targetPort: 1337
      selector:
        app: ${NAME}-${SUFFIX}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    spec:
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        app: ${NAME}-${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        resources:
          cpu:
            requests: 250m
            limits: 500m
          memory:
            request: 150Mi
            limits: 250Mi
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 1000
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            app: ${NAME}-${SUFFIX}
        spec:
          volumes:
            - name: strapi-media-pv
              persistentVolumeClaim:
                claimName: strapi-media-pvc
          containers:
            - image: ${IMAGE_REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_STREAM}:${IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              name: ${NAME}-${SUFFIX}
              env:
                - name: DATABASE_URI
                  valueFrom:
                    secretKeyRef:
                      name: ${MONGO_SECRET_NAME} 
                      key: ${MONGO_SECRET_URL_KEY_REF}
                - name: ADMIN_JWT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: strapi-jwt
                      key: admin-jwt
                - name: EVENTBRITE_BEARER_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: eventbrite
                      key: bearer-token
              resources: 
                cpu:
                  requests: ${CPU_REQUEST}
                  limits: ${CPU_LIMIT}
                memory:
                  requests: ${MEMORY_REQUEST}
                  limits: ${MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /app/public/uploads
                name: strapi-media-pv
              readinessProbe:
                httpGet:
                  path: /
                  port: 1337
                  scheme: HTTP
                initialDelaySeconds: 300
                timeoutSeconds: 1
                periodSeconds: 90
                successThreshold: 1
                failureThreshold: 6
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}-${SUFFIX}
            from:
              kind: ImageStreamTag
              name: '${IMAGE_STREAM}:${IMAGE_TAG}'
              namespace: ${IMAGE_NAMESPACE}
          type: ImageChange
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      generation: 2
      labels:
        app: ${NAME}-${SUFFIX}
        group: ${NAME}
        pr: ${PULL_REQUEST_NUMBER}
        version: ${IMAGE_TAG}
      name: ${NAME}-${SUFFIX}
parameters:
- name: IMAGE_REGISTRY
  value: image-registry.openshift-image-registry.svc:5000
  description: the image registry to find the docker image
- name: IMAGE_NAMESPACE
  required: true
  description: the namespace to pull the image from 
  displayName: Image Namespace
- name: IMAGE_STREAM
  required: true
  displayName: Image Stream 
  description: the name of the image stream the image is pulled from 
- name: IMAGE_TAG
  required: true
  displayName: Image Tag 
  description: the tag for the image to deploy
- name: MONGO_SECRET_NAME
  required: true
  displayName: Database Secret Name
  description: The secret name that is uses in the valueFrom in spec.template.spec.containers.env
- name: MONGO_SECRET_URL_KEY_REF
  required: true
  displayName: Database Secret Key Reference 
  description: The key that is used as the reference for the mongo url
  value: mongo-url
- name: NAME
  required: true
  displayName: name
  description: the name for the dc and container
  value: strapi
- name: CPU_REQUEST
  value: 50m 
- name: MEMORY_REQUEST
  value: 50Mi 
- name: CPU_LIMIT
  value: 70m 
- name: MEMORY_LIMIT
  value: 75Mi 
- name: SUFFIX
  required: true
  description: a suffix used in conjunction with NAME to further isolate different instances of these components
  displayName: suffix
- name: PULL_REQUEST_NUMBER
  default: 0
  required: false 
  description: The pull request number associated with this object
  displayName: Pull Request Number


